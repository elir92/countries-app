{"version":3,"sources":["components/Game/DoneGame/DoneGame.js","components/Game/Avatar/Avatar.js","components/Game/RestartButton/RestartButton.js","components/Game/AnswerList/AnswerList.js","components/Game/RandomFlag/RandomFlag.js","containers/FlagGame/QuizGame/QuizGame.js","containers/FlagGame/FlagGame.js"],"names":["doneGame","props","react_default","a","createElement","className","score","reactstrap_es","onClick","restart","color","size","avatar","_ref","context","RestartButton","reset","outline","AnswerList","game","stage","flag","rightAnswerFlagId","wrongAnswerFlagId","click","answerFlag","answersList","map","country","key","alpha3Code","disabled","name","RandomFlag","style","backgroundImage","concat","QuizGame","state","wrongId","rightId","nextStage","countRightAnswer","timer","answerHandler","answer","id","_this","setState","prevState","setTimeout","nextStageHandler","currentStage","wrongAnswer","renderStage","_this$props","randomFlag","restartGameHandler","sm","md","Game_RandomFlag_RandomFlag","Avatar","Game_RestartButton_RestartButton","Game_AnswerList_AnswerList","renderGame","DoneGame_DoneGame","this","_this2","timerID","setInterval","tick","nextProps","nextState","prevProps","clearInterval","Component","connect","gameReducer","dispatch","restartGame","FlagGame","renderIntro","src","globe","alt","startGameHandler","gameStatus","FlagGame_QuizGame_QuizGame","countries","length","requestCountriesHandler","textAlign","tableReducer","isPending","requestCountries","startGame"],"mappings":"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","file":"static/js/2.cba53649.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './DoneGame.css';\r\n\r\n\r\nconst doneGame = (props) => {\r\n    return (\r\n        <div className=\"Done\">\r\n            <h1>Finish!</h1>\r\n            <h3>You answered correctly on {props.score} {props.score === 1 ? 'question' : 'questions'}</h3>\r\n            <hr />\r\n            <Button onClick={props.restart} color=\"secondary\" size=\"lg\">Back</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default doneGame;","import React from 'react';\r\n\r\nconst avatar = ({ context, className }) => {\r\n    return (\r\n        <div className={className}><span>{context}</span></div>\r\n    )\r\n}\r\n\r\nexport default avatar;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst RestartButton = ({ reset }) => {\r\n    return (\r\n        <div className=\"Restart-Button\">\r\n            <Button onClick={reset} color=\"secondary\" outline>Restart</Button>\r\n        </div>);\r\n}\r\n\r\nexport default RestartButton;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst AnswerList = ({ game, stage, flag, rightAnswerFlagId, wrongAnswerFlagId, click, answerFlag }) => {\r\n    const answersList = game[stage].map(country => {\r\n        return <li key={country.alpha3Code}>\r\n            <Button\r\n                disabled={answerFlag}\r\n                className=\"Answer-Button\"\r\n                onClick={() => click(country.name, flag.name, country.alpha3Code)}\r\n                color=\"secondary\">\r\n                {country.name}\r\n            </Button>\r\n            {wrongAnswerFlagId === country.alpha3Code ? <i className=\"far fa-times-circle wrong-ans\"></i> : null}\r\n            {rightAnswerFlagId === country.alpha3Code ? <i className=\"far fa-check-circle right-ans\"></i> : null}\r\n        </li>;\r\n    });\r\n\r\n    return (\r\n        <ul>\r\n            {answersList}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default AnswerList;","import React from 'react';\r\n\r\nconst RandomFlag = ({ flag }) => {\r\n    return (\r\n        <div className=\"Flag-Img\" style={{ backgroundImage: `url(${flag})` }}></div>\r\n    );\r\n}\r\n\r\nexport default RandomFlag;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { restartGame, answerHandler } from '../../../store/actions/actions';\r\nimport { Row, Col } from 'reactstrap';\r\nimport './QuizGame.css';\r\nimport DoneGame from '../../../components/Game/DoneGame/DoneGame';\r\nimport Avatar from '../../../components/Game/Avatar/Avatar';\r\nimport RestartButton from '../../../components/Game/RestartButton/RestartButton';\r\nimport AnswerList from '../../../components/Game/AnswerList/AnswerList';\r\nimport RandomFlag from '../../../components/Game/RandomFlag/RandomFlag';\r\n\r\nclass QuizGame extends Component {\r\n\r\n    state = {\r\n        wrongId: '',\r\n        rightId: '',\r\n        nextStage: false,\r\n        answerFlag: false,\r\n        countRightAnswer: 0,\r\n        timer: 7\r\n    }\r\n\r\n\r\n    tick() {\r\n        this.setState((prevState) => {\r\n            return {\r\n                timer: prevState.timer - 1\r\n            }\r\n        });\r\n    }\r\n\r\n    nextStageHandler(stage) {\r\n        this.props.answerHandler(stage);\r\n        this.setState({ answerFlag: false, timer: 7 });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1200\r\n        );\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextState.timer >= 0;\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (!this.state.timer) {\r\n            this.nextStageHandler(this.props.currentStage);\r\n        }\r\n       \r\n        if(prevProps.currentStage === 10) {\r\n            // Clear the timer after the game.\r\n            clearInterval(this.timerID);\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n\r\n    answerHandler = (answer, flag, id) => {\r\n        if (answer === flag) {\r\n            this.setState((prevState, props) => {\r\n                return {\r\n                    countRightAnswer: prevState.countRightAnswer + 1,\r\n                    rightId: id,\r\n                    wrongId: '',\r\n                    answerFlag: true\r\n                }\r\n            });\r\n            setTimeout(() => this.nextStageHandler(this.props.currentStage), 1000);\r\n        } else {\r\n            this.setState({ wrongAnswer: true, wrongId: id, rightId: '', answerFlag: true });\r\n            setTimeout(() => this.nextStageHandler(this.props.currentStage), 1000);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderStage = () => {\r\n        const { game, currentStage, randomFlag, restartGameHandler } = this.props;\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\" md=\"6\" className=\"Flag-Col\">\r\n                    <RandomFlag flag={randomFlag.flag} />\r\n                </Col>\r\n                <Col sm=\"12\" md=\"6\" className=\"Answer-Col\">\r\n                    <Avatar className=\"Timer-Avatar\" context={this.state.timer} />\r\n                    <Avatar className=\"Stage-Avatar\" context={currentStage + 1} />\r\n                    <RestartButton reset={restartGameHandler} />\r\n                    <AnswerList\r\n                        game={game}\r\n                        stage={currentStage}\r\n                        flag={randomFlag}\r\n                        click={this.answerHandler}\r\n                        wrongAnswerFlagId={this.state.wrongId}\r\n                        rightAnswerFlagId={this.state.rightId}\r\n                        answerFlag={this.state.answerFlag} />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    renderGame = () => {\r\n        if (this.props.currentStage !== 10) {\r\n            return this.renderStage();\r\n        } else {\r\n            return <DoneGame score={this.state.countRightAnswer} restart={this.props.restartGameHandler} />\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Quiz-Game\">\r\n                {this.renderGame()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        game: state.gameReducer.game,\r\n        currentStage: state.gameReducer.currentStage,\r\n        randomFlag: state.gameReducer.randomFlag\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        restartGameHandler: () => dispatch(restartGame()),\r\n        answerHandler: (currentStage) => dispatch(answerHandler(currentStage))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizGame);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { requestCountries, startGame } from '../../store/actions/actions';\r\nimport { Button } from 'reactstrap';\r\nimport globe from '../../assets/globe.svg';\r\nimport './FlagGame.css';\r\nimport QuizGame from './QuizGame/QuizGame';\r\n\r\nclass FlagGame extends Component {\r\n\r\n    componentDidMount() {\r\n        if (!this.props.countries.length) {\r\n            this.props.requestCountriesHandler();\r\n        }\r\n    }\r\n\r\n    renderIntro = () => {\r\n        return (\r\n            <div className=\"Flag-Intro\">\r\n                <h1 className=\"Flag-Title\">Flags Quiz Game</h1>\r\n                <img src={globe} className=\"Flag-logo\" alt=\"globe\" />\r\n                <Button onClick={this.props.startGameHandler} color=\"secondary\" size=\"lg\">Start Game</Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderGame = () => {\r\n        return (\r\n            !this.props.gameStatus ? this.renderIntro() : <QuizGame />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return this.props.countries.length ? this.renderGame() : <h1 style={{textAlign: 'center'}} className=\"Flag-Title\">Loading...</h1>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        countries: state.tableReducer.countries,\r\n        isPending: state.tableReducer.isPending,\r\n        gameStatus: state.gameReducer.gameStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        requestCountriesHandler: () => dispatch(requestCountries()),\r\n        startGameHandler: () => dispatch(startGame())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FlagGame);"],"sourceRoot":""}