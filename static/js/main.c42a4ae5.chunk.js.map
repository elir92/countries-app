{"version":3,"sources":["assets/globe.svg","store/actions/actionTypes.js","assets/react-logo.svg","assets/redux-logo.svg","containers/Layout.js","containers/AppNavbar/AppNavbar.js","components/Footer/Footer.js","containers/Home/Home.js","hoc/asyncComponent/asyncComponent.js","App.js","utility.js","store/reducers/tableReducer.js","store/reducers/gameReducer.js","store/reducers/chartsReducer.js","store/reducers/rootReducer.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","d","__webpack_exports__","REQUEST_COUNTRIES_PENDING","REQUEST_COUNTRIES_SUCCESS","REQUEST_COUNTRIES_FAILED","CHANGE_SEARCH_FIELD","SET_MODAL_STATE","MODAL_TOGGLE","START_GAME","RESTART_GAME","ANSWER_HANDLER","REQUEST_COUNTRIES_FOR_CHARTS_PENDING","REQUEST_COUNTRIES_FOR_CHARTS_SUCCESS","REQUEST_COUNTRIES_FOR_CHARTS_FAILED","layout","props","children","AppNavbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleHandler","setState","isOpen","state","nextProps","nextState","react_default","a","createElement","react","reactstrap_es","color","dark","expand","className","href","onClick","navbar","tag","Link","to","process","React","Component","footer","target","rel","Home","src","globe","alt","reactLogo","reduxLogo","asnycComponent","importComponent","_Component","_class2","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","component","inherits","createClass","key","value","_this2","then","cmp","default","C","asyncTable","asyncComponent","Promise","all","e","bind","asyncFlagGame","asyncCharts","App","BrowserRouter","Layout","containers_AppNavbar_AppNavbar","Switch","Route","path","exact","Footer_Footer","updateObject","oldObject","updatedProperties","objectSpread","randBetween","arr","n","result","i","temp","splice","Math","floor","random","push","initialState","isPending","countries","error","searchField","modal","currentCountry","tableReducer","undefined","action","type","actionType","requestCountriesPending","payload","requestCountriesSuccess","requestCountriesFail","setSearchField","current_country","population","toLocaleString","setModalState","modalToggle","gameStatus","game","currentStage","randomFlag","randFlag","stage","startGame","initiateGame","buildGame","toConsumableArray","gameReducer","restartGame","answerHandler","topThreeCountries","regions","countedCountries","topThree","sort","b","slice","regionList","map","country","region","filter","from","Set","regionListExtract","reduce","regionResult","regionIndex","findIndex","name","count","countedCountriesCalc","chartsReducer","rootReducer","combineReducers","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","middlewares","thunk","store","createStore","applyMiddleware","app","es","src_App","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c42a4ae5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/globe.de21dbaf.svg\";","export const REQUEST_COUNTRIES_PENDING = 'REQUEST_COUNTRIES_PENDING';\r\nexport const REQUEST_COUNTRIES_SUCCESS = 'REQUEST_COUNTRIES_SUCCESS';\r\nexport const REQUEST_COUNTRIES_FAILED = 'REQUEST_COUNTRIES_FAILED';\r\n\r\n//------------------------------------------------------------------------\r\n\r\n// Country Table Actions\r\n\r\nexport const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\nexport const SET_MODAL_STATE = 'SET_MODAL_STATE';\r\nexport const MODAL_TOGGLE = 'MODAL_TOGGLE';\r\n\r\n//------------------------------------------------------------------------\r\n\r\n// Flag Game Actions\r\n\r\nexport const START_GAME = 'START_GAME';\r\nexport const RESTART_GAME = 'RESTART_GAME';\r\nexport const ANSWER_HANDLER = 'ANSWER_HANDLER';\r\n\r\n//------------------------------------------------------------------------\r\n\r\n// Charts Actions\r\n\r\nexport const REQUEST_COUNTRIES_FOR_CHARTS_PENDING = 'REQUEST_COUNTRIES_FOR_CHARTS_PENDING';\r\nexport const REQUEST_COUNTRIES_FOR_CHARTS_SUCCESS = 'REQUEST_COUNTRIES_FOR_CHARTS_SUCCESS';\r\nexport const REQUEST_COUNTRIES_FOR_CHARTS_FAILED = 'REQUEST_COUNTRIES_FOR_CHARTS_FAILED';","module.exports = __webpack_public_path__ + \"static/media/react-logo.c182efec.svg\";","module.exports = __webpack_public_path__ + \"static/media/redux-logo.5142d43f.svg\";","const layout = props => props.children\r\nexport default layout;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Container } from 'reactstrap';\r\nimport './AppNavbar.css';\r\n\r\nclass AppNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps,nextState) {\r\n        if(this.state.isOpen !== nextState.isOpen){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    toggleHandler = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-3\">\r\n                    <Container className=\"navbar-container\">\r\n                        <NavbarBrand href=\"\">Countries Application</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleHandler} />\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} to={process.env.PUBLIC_URL + \"/\"}>\r\n                                        Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem  >\r\n                                    <NavLink tag={Link} to={process.env.PUBLIC_URL + \"/table\"}>\r\n                                        Table\r\n                                    </NavLink>\r\n                                </NavItem  >\r\n                                <NavItem >\r\n                                    <NavLink tag={Link} to={process.env.PUBLIC_URL + \"/flag-game\"}>\r\n                                        Flag Game\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem >\r\n                                    <NavLink tag={Link} to={process.env.PUBLIC_URL + \"/charts\"}>\r\n                                       Charts\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppNavbar","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst footer = () => (\r\n    <footer className=\"Footer\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/eli-rahamim-04b6a8144/\"><i className=\"fab fa-linkedin\"></i></a>\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/elir92\"><i className=\"fab fa-github\"></i></a>\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/EliRahamim\"><i className=\"fab fa-twitter\"></i></a>\r\n    </footer>\r\n);\r\n\r\nexport default footer;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport globe from '../../assets/globe.svg';\r\nimport reactLogo from '../../assets/react-logo.svg';\r\nimport reduxLogo from '../../assets/redux-logo.svg';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n                <h1 className=\"Home-title\">Welcome</h1>\r\n                <img src={globe} className=\"Home-logo\" alt=\"globe\" />\r\n                <h4 className=\"details__headtitle\">Based on</h4>\r\n                <a href=\"https://reactjs.org/\"><img className=\"react-logo\" src={reactLogo} alt=\"logo\" /></a>\r\n                <a href=\"https://redux.js.org/\"><img className=\"redux-logo\" src={reduxLogo} alt=\"logo\" /></a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nconst asnycComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            importComponent().then(cmp => {\r\n                this.setState({ component: cmp.default });\r\n            });\r\n        };\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props}/> : null;\r\n        };\r\n    };\r\n};\r\n\r\nexport default asnycComponent;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport Layout from './containers/Layout';\r\nimport AppNavbar from './containers/AppNavbar/AppNavbar';\r\nimport Footer from './components/Footer/Footer';\r\nimport Home from './containers/Home/Home';\r\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\r\n\r\nconst asyncTable = asyncComponent(() => import('./containers/CountriesTable/CountriesTable'));\r\nconst asyncFlagGame = asyncComponent(() => import('./containers/FlagGame/FlagGame'));\r\nconst asyncCharts = asyncComponent(() => import('./containers/CountriesCharts/CountriesCharts'));\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout>\r\n          <AppNavbar />\r\n          <Container>\r\n            <Switch>\r\n              <Route path={process.env.PUBLIC_URL + \"/\"} exact component={Home} />\r\n              <Route path={process.env.PUBLIC_URL + \"/table\"} component={asyncTable} />\r\n              <Route path={process.env.PUBLIC_URL + \"/flag-game\"} component={asyncFlagGame} />\r\n              <Route path={process.env.PUBLIC_URL + \"/charts\"} component={asyncCharts} />\r\n            </Switch>\r\n          </Container>\r\n          <Footer />\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// Pagination function\r\nexport const paginate = (arr, current_page, page_size) => {\r\n    const indexOfLastCountry = current_page * page_size;\r\n    const indexOfFirstCountry = indexOfLastCountry - page_size;\r\n    return arr.slice(indexOfFirstCountry, indexOfLastCountry);\r\n};\r\n\r\n// Logic for displaying page numbers\r\nexport const displayPages = (arr, page_size) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(arr.length / page_size); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    return pageNumbers;\r\n};\r\n\r\n// Updating object funcion\r\nexport const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\n// In order to pick n numbers from the data array.\r\nexport const randBetween = (arr, n) => {\r\n    const result = [];\r\n    for (let i = 0; i < n; i++) {\r\n        const temp = arr.splice(Math.floor(Math.random() * (arr.length)), 1);\r\n        result.push(temp[0]);\r\n    }\r\n    return result;\r\n}\r\n","import * as actionType from '../actions/actionTypes';\r\nimport { updateObject } from '../../utility';\r\n\r\nconst initialState = {\r\n    isPending: false,\r\n    countries: [],\r\n    error: null,\r\n    searchField: '',\r\n    modal: false,\r\n    currentCountry: {}\r\n}\r\n\r\nconst requestCountriesPending = (state) => {\r\n    return updateObject(state, { isPending: true });\r\n};\r\n\r\nconst requestCountriesSuccess = (state, action) => {\r\n    return updateObject(state, { countries: action.payload, isPending: false});\r\n};\r\n\r\nconst requestCountriesFail = (state, action) => {\r\n    return updateObject(state, { error: action.payload, isPending: false });\r\n};\r\n\r\nconst setSearchField = (state, action) => {\r\n    return updateObject(state, { searchField: action.payload });\r\n};\r\n\r\nconst setModalState = (state, action) => {\r\n    let current_country = {...action.payload, population: action.payload.population.toLocaleString() }\r\n    return updateObject(state, { modal: true, currentCountry: current_country });\r\n};\r\n\r\nconst modalToggle = (state) => {\r\n    return updateObject(state, { modal: !state.modal, currentCountry: {} });\r\n};\r\n\r\n\r\nconst tableReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.REQUEST_COUNTRIES_PENDING: return requestCountriesPending(state);\r\n        case actionType.REQUEST_COUNTRIES_SUCCESS: return requestCountriesSuccess(state, action);\r\n        case actionType.REQUEST_COUNTRIES_FAILED: return requestCountriesFail(state, action);\r\n        case actionType.CHANGE_SEARCH_FIELD: return setSearchField(state, action);\r\n        case actionType.SET_MODAL_STATE: return setModalState(state, action);\r\n        case actionType.MODAL_TOGGLE: return modalToggle(state);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default tableReducer;","import * as actionType from '../actions/actionTypes';\r\nimport { updateObject, randBetween } from '../../utility';\r\n\r\nconst initialState = {\r\n    isPending: false,\r\n    countries: [],\r\n    error: null,\r\n    gameStatus: false,\r\n    game: [],\r\n    currentStage: 0,\r\n    randomFlag: ''\r\n}\r\n\r\nconst buildGame = (arr) => {\r\n    const game = [];\r\n    for (let i = 0; i < 10; i++) {\r\n        let stage = randBetween(arr, 4);\r\n        game.push(stage);\r\n    }\r\n    return game;\r\n}\r\n\r\nconst randFlag = (arr, stage) => {\r\n    if (stage < 10) {\r\n        return arr[stage][Math.floor(Math.random() * arr[stage].length)];\r\n    }\r\n}\r\n\r\nconst requestCountriesPending = (state) => {\r\n    return updateObject(state, { isPending: true });\r\n};\r\n\r\nconst requestCountriesSuccess = (state, action) => {\r\n    return updateObject(state, { countries: action.payload, isPending: false });\r\n};\r\n\r\nconst requestCountriesFail = (state, action) => {\r\n    return updateObject(state, { error: action.payload, isPending: false });\r\n};\r\n\r\nconst startGame = (state) => {\r\n    const countriesForGame = [...state.countries];\r\n    const initiateGame = buildGame(countriesForGame);\r\n    return updateObject(state, { gameStatus: true, game: initiateGame, randomFlag: randFlag(initiateGame, state.currentStage) });\r\n}\r\n\r\nconst restartGame = (state) => {\r\n    return updateObject(state, { gameStatus: false, game: [], currentStage: 0 });\r\n}\r\n\r\nconst answerHandler = (state, action) => {\r\n    if (action.payload <= 10) {\r\n        return updateObject(state, { currentStage: action.payload, randomFlag: randFlag(state.game, action.payload) });\r\n    }\r\n}\r\n\r\n const gameReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.REQUEST_COUNTRIES_PENDING: return requestCountriesPending(state);\r\n        case actionType.REQUEST_COUNTRIES_SUCCESS: return requestCountriesSuccess(state, action);\r\n        case actionType.REQUEST_COUNTRIES_FAILED: return requestCountriesFail(state, action);\r\n        case actionType.START_GAME: return startGame(state);\r\n        case actionType.RESTART_GAME: return restartGame(state);\r\n        case actionType.ANSWER_HANDLER: return answerHandler(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default gameReducer;\r\n","import * as actionType from '../actions/actionTypes';\r\nimport { updateObject } from '../../utility';\r\n\r\nconst initialState = {\r\n    isPending: false,\r\n    topThreeCountries: [],\r\n    regions: [],\r\n    countedCountries: [],\r\n    error: null\r\n}\r\n\r\nconst topThreeCalc = (arr) => {\r\n    return arr.sort((a, b) => b.population - a.population).slice(0, 3);\r\n}\r\n\r\nconst regionListExtract = (arr) => {\r\n    const regionList = arr.map(country => country.region).filter(region => region !== \"\");\r\n    const uniqueRegions = Array.from(new Set(regionList)).sort();\r\n    return uniqueRegions;\r\n}\r\n\r\nconst countedCountriesCalc = (arr) => {\r\n    const sortedRegion = arr.sort((a, b) => (a.region > b.region) - (a.region < b.region));\r\n    const countedCountries = sortedRegion.reduce((regionResult, country) => {\r\n        if (!country.region) return regionResult;\r\n\r\n        let regionIndex = regionResult.findIndex((region) => country.region === region.name);\r\n\r\n        if (~regionIndex) {\r\n            regionResult[regionIndex].count++;\r\n        } else {\r\n            regionResult.push({ name: country.region, count: 1 });\r\n\r\n        }\r\n        return regionResult;\r\n    }, []);\r\n\r\n    return countedCountries;\r\n\r\n}\r\n\r\nconst requestCountriesPending = (state) => {\r\n    return updateObject(state, { isPending: true });\r\n};\r\n\r\nconst requestCountriesSuccess = (state, action) => {\r\n\r\n    const topThree = topThreeCalc(action.payload);\r\n    const regionList = regionListExtract(action.payload);\r\n    const countedCountries = countedCountriesCalc(action.payload);\r\n\r\n    return updateObject(state, { topThreeCountries: topThree, regions: regionList, countedCountries: countedCountries, isPending: false });\r\n};\r\n\r\nconst requestCountriesFail = (state, action) => {\r\n    return updateObject(state, { error: action.payload, isPending: false });\r\n};\r\n\r\nconst chartsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.REQUEST_COUNTRIES_FOR_CHARTS_PENDING: return requestCountriesPending(state);\r\n        case actionType.REQUEST_COUNTRIES_FOR_CHARTS_SUCCESS: return requestCountriesSuccess(state, action);\r\n        case actionType.REQUEST_COUNTRIES_FOR_CHARTS_FAILED: return requestCountriesFail(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default chartsReducer;","import { combineReducers } from 'redux';\r\nimport tableReducer from './tableReducer';\r\nimport gameReducer from './gameReducer';\r\nimport chartsReducer from './chartsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    tableReducer,\r\n    gameReducer,\r\n    chartsReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n    const logger = (createLogger());\r\n    middlewares.push(logger);\r\n    // const { whyDidYouUpdate } = require('why-did-you-update');\r\n    // whyDidYouUpdate(React, {\r\n    //     exclude: [\r\n    //         // React Router\r\n    //         /^Route/,\r\n    //         // Switch \r\n    //         /^Switch/\r\n    //     ]\r\n    // });\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nconst app = <Provider store={store}><App /></Provider>;\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\nregisterServiceWorker();"],"sourceRoot":""}