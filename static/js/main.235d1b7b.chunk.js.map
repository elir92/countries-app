{"version":3,"sources":["store/actions/actions.js","store/actions/actionTypes.js","assets/globe.svg","assets/react-logo.svg","assets/redux-logo.svg","containers/Layout.js","containers/AppNavbar/AppNavbar.js","components/Footer/Footer.js","containers/Home/Home.js","hoc/asyncComponent/asyncComponent.js","App.js","utility.js","store/reducers/tableReducer.js","store/reducers/gameReducer.js","store/reducers/chartsReducer.js","store/reducers/rootReducer.js","registerServiceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","requestCountries","setSearchField","setModalState","modalToggle","startGame","restartGame","answerHandler","requestCountriesForCharts","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_actionTypes__WEBPACK_IMPORTED_MODULE_1__","dispatch","type","actionType","axios","get","then","countries","payload","data","catch","error","text","obj","num","REQUEST_COUNTRIES_PENDING","REQUEST_COUNTRIES_SUCCESS","REQUEST_COUNTRIES_FAILED","CHANGE_SEARCH_FIELD","SET_MODAL_STATE","MODAL_TOGGLE","START_GAME","RESTART_GAME","ANSWER_HANDLER","REQUEST_COUNTRIES_FOR_CHARTS_PENDING","REQUEST_COUNTRIES_FOR_CHARTS_SUCCESS","REQUEST_COUNTRIES_FOR_CHARTS_FAILED","module","exports","p","layout","props","children","AppNavbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleHandler","setState","isOpen","state","nextProps","nextState","react_default","a","createElement","react","reactstrap_es","color","dark","expand","className","href","onClick","navbar","tag","Link","to","process","React","Component","footer","target","rel","Home","restartGameHandler","src","globe","alt","reactLogo","reduxLogo","connect","asnycComponent","importComponent","_Component","_class2","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","component","inherits","createClass","key","value","_this2","cmp","default","C","asyncTable","asyncComponent","e","bind","asyncFlagGame","asyncCharts","Promise","all","App","BrowserRouter","Layout","containers_AppNavbar_AppNavbar","Switch","Route","path","exact","Footer_Footer","updateObject","oldObject","updatedProperties","objectSpread","randBetween","arr","result","i","temp","splice","Math","floor","random","push","initialState","isPending","searchField","modal","currentCountry","tableReducer","undefined","action","requestCountriesPending","requestCountriesSuccess","requestCountriesFail","current_country","population","toLocaleString","gameStatus","game","currentStage","randomFlag","randFlag","stage","initiateGame","buildGame","toConsumableArray","gameReducer","topThreeCountries","regions","countedCountries","topThree","sort","b","slice","regionList","map","country","region","filter","from","Set","regionListExtract","reduce","regionResult","regionIndex","findIndex","name","count","countedCountriesCalc","chartsReducer","rootReducer","combineReducers","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","middlewares","thunk","store","createStore","applyMiddleware","app","es","src_App","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.235d1b7b.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport * as actionType from './actionTypes';\r\n\r\nexport const requestCountries = () => (dispatch) => {\r\n    const url = \"https://restcountries.eu/rest/v2/all?fields=name;flag;alpha3Code;capital;region;population\";\r\n    dispatch({ type: actionType.REQUEST_COUNTRIES_PENDING });\r\n    axios.get(url)\r\n        .then(countries => dispatch({ type: actionType.REQUEST_COUNTRIES_SUCCESS, payload: countries.data }))\r\n        .catch(error => dispatch({ type: actionType.REQUEST_COUNTRIES_FAILED, payload: error }));\r\n};\r\n\r\n//---------------------------------------------------------\r\n\r\n// Country Table Actions.\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: actionType.CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n});\r\n\r\nexport const setModalState = (obj) => ({\r\n    type: actionType.SET_MODAL_STATE,\r\n    payload: obj\r\n});\r\n\r\nexport const modalToggle = () => ({\r\n    type: actionType.MODAL_TOGGLE\r\n});\r\n\r\n//---------------------------------------------------------\r\n\r\n// Flag Game Actions.\r\n\r\nexport const startGame = () => ({\r\n    type: actionType.START_GAME\r\n});\r\n\r\nexport const restartGame = () => ({\r\n    type: actionType.RESTART_GAME\r\n});\r\n\r\nexport const answerHandler = (num) => ({\r\n    type: actionType.ANSWER_HANDLER,\r\n    payload: num + 1\r\n});\r\n\r\n//---------------------------------------------------------\r\n\r\n// Charts Actions\r\n\r\nexport const requestCountriesForCharts = () => (dispatch) => {\r\n    const url = \"https://restcountries.eu/rest/v2/all?fields=name;region;population\";\r\n    dispatch({ type: actionType.REQUEST_COUNTRIES_FOR_CHARTS_PENDING });\r\n    axios.get(url)\r\n        .then(countries => dispatch({ type: actionType.REQUEST_COUNTRIES_FOR_CHARTS_SUCCESS, payload: countries.data }))\r\n        .catch(error => dispatch({ type: actionType.REQUEST_COUNTRIES_FOR_CHARTS_FAILED, payload: error }));\r\n};","export const REQUEST_COUNTRIES_PENDING = 'REQUEST_COUNTRIES_PENDING';\r\nexport const REQUEST_COUNTRIES_SUCCESS = 'REQUEST_COUNTRIES_SUCCESS';\r\nexport const REQUEST_COUNTRIES_FAILED = 'REQUEST_COUNTRIES_FAILED';\r\n\r\n//------------------------------------------------------------------------\r\n\r\n// Country Table Actions\r\n\r\nexport const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\nexport const SET_MODAL_STATE = 'SET_MODAL_STATE';\r\nexport const MODAL_TOGGLE = 'MODAL_TOGGLE';\r\n\r\n//------------------------------------------------------------------------\r\n\r\n// Flag Game Actions\r\n\r\nexport const START_GAME = 'START_GAME';\r\nexport const RESTART_GAME = 'RESTART_GAME';\r\nexport const ANSWER_HANDLER = 'ANSWER_HANDLER';\r\n\r\n//------------------------------------------------------------------------\r\n\r\n// Charts Actions\r\n\r\nexport const REQUEST_COUNTRIES_FOR_CHARTS_PENDING = 'REQUEST_COUNTRIES_FOR_CHARTS_PENDING';\r\nexport const REQUEST_COUNTRIES_FOR_CHARTS_SUCCESS = 'REQUEST_COUNTRIES_FOR_CHARTS_SUCCESS';\r\nexport const REQUEST_COUNTRIES_FOR_CHARTS_FAILED = 'REQUEST_COUNTRIES_FOR_CHARTS_FAILED';","module.exports = __webpack_public_path__ + \"static/media/globe.de21dbaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-logo.c182efec.svg\";","module.exports = __webpack_public_path__ + \"static/media/redux-logo.5142d43f.svg\";","const layout = props => props.children\r\nexport default layout;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Container } from 'reactstrap';\r\nimport './AppNavbar.css';\r\n\r\nclass AppNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps,nextState) {\r\n        if(this.state.isOpen !== nextState.isOpen){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    toggleHandler = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-3\">\r\n                    <Container className=\"navbar-container\">\r\n                        <NavbarBrand href=\"\">Countries Application</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleHandler} />\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} to={process.env.PUBLIC_URL + \"/\"}>\r\n                                        Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem  >\r\n                                    <NavLink tag={Link} to={process.env.PUBLIC_URL + \"/table\"}>\r\n                                        Table\r\n                                    </NavLink>\r\n                                </NavItem  >\r\n                                <NavItem >\r\n                                    <NavLink tag={Link} to={process.env.PUBLIC_URL + \"/flag-game\"}>\r\n                                        Flag Game\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem >\r\n                                    <NavLink tag={Link} to={process.env.PUBLIC_URL + \"/charts\"}>\r\n                                       Charts\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppNavbar","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst footer = () => (\r\n    <footer className=\"Footer\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/eli-rahamim-04b6a8144/\"><i className=\"fab fa-linkedin\"></i></a>\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/elir92\"><i className=\"fab fa-github\"></i></a>\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/EliRahamim\"><i className=\"fab fa-twitter\"></i></a>\r\n    </footer>\r\n);\r\n\r\nexport default footer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { restartGame } from '../../store/actions/actions';\r\nimport './Home.css';\r\nimport globe from '../../assets/globe.svg';\r\nimport reactLogo from '../../assets/react-logo.svg';\r\nimport reduxLogo from '../../assets/redux-logo.svg';\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        this.props.restartGameHandler();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n                <h1 className=\"Home-title\">Welcome</h1>\r\n                <img src={globe} className=\"Home-logo\" alt=\"globe\" />\r\n                <h4 className=\"details__headtitle\">Based on</h4>\r\n                <a href=\"https://reactjs.org/\"><img className=\"react-logo\" src={reactLogo} alt=\"logo\" /></a>\r\n                <a href=\"https://redux.js.org/\"><img className=\"redux-logo\" src={reduxLogo} alt=\"logo\" /></a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        restartGameHandler: () => dispatch(restartGame())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Home);","import React, { Component } from 'react';\r\n\r\nconst asnycComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            importComponent().then(cmp => {\r\n                this.setState({ component: cmp.default });\r\n            });\r\n        };\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props}/> : null;\r\n        };\r\n    };\r\n};\r\n\r\nexport default asnycComponent;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport Layout from './containers/Layout';\r\nimport AppNavbar from './containers/AppNavbar/AppNavbar';\r\nimport Footer from './components/Footer/Footer';\r\nimport Home from './containers/Home/Home';\r\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\r\n\r\nconst asyncTable = asyncComponent(() => import('./containers/CountriesTable/CountriesTable'));\r\nconst asyncFlagGame = asyncComponent(() => import('./containers/FlagGame/FlagGame'));\r\nconst asyncCharts = asyncComponent(() => import('./containers/CountriesCharts/CountriesCharts'));\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout>\r\n          <AppNavbar />\r\n          <Container>\r\n            <Switch>\r\n              <Route path={process.env.PUBLIC_URL + \"/\"} exact component={Home} />\r\n              <Route path={process.env.PUBLIC_URL + \"/table\"} component={asyncTable} />\r\n              <Route path={process.env.PUBLIC_URL + \"/flag-game\"} component={asyncFlagGame} />\r\n              <Route path={process.env.PUBLIC_URL + \"/charts\"} component={asyncCharts} />\r\n            </Switch>\r\n          </Container>\r\n          <Footer />\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// Pagination function\r\nexport const paginate = (arr, current_page, page_size) => {\r\n    const indexOfLastCountry = current_page * page_size;\r\n    const indexOfFirstCountry = indexOfLastCountry - page_size;\r\n    return arr.slice(indexOfFirstCountry, indexOfLastCountry);\r\n};\r\n\r\n// Logic for displaying page numbers\r\nexport const displayPages = (arr, page_size) => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(arr.length / page_size); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    return pageNumbers;\r\n};\r\n\r\n// Updating object funcion\r\nexport const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\n// In order to pick n numbers from the data array.\r\nexport const randBetween = (arr, n) => {\r\n    const result = [];\r\n    for (let i = 0; i < n; i++) {\r\n        const temp = arr.splice(Math.floor(Math.random() * (arr.length)), 1);\r\n        result.push(temp[0]);\r\n    }\r\n    return result;\r\n}\r\n","import * as actionType from '../actions/actionTypes';\r\nimport { updateObject } from '../../utility';\r\n\r\nconst initialState = {\r\n    isPending: false,\r\n    countries: [],\r\n    error: null,\r\n    searchField: '',\r\n    modal: false,\r\n    currentCountry: {}\r\n}\r\n\r\nconst requestCountriesPending = (state) => {\r\n    return updateObject(state, { isPending: true });\r\n};\r\n\r\nconst requestCountriesSuccess = (state, action) => {\r\n    return updateObject(state, { countries: action.payload, isPending: false});\r\n};\r\n\r\nconst requestCountriesFail = (state, action) => {\r\n    return updateObject(state, { error: action.payload, isPending: false });\r\n};\r\n\r\nconst setSearchField = (state, action) => {\r\n    return updateObject(state, { searchField: action.payload });\r\n};\r\n\r\nconst setModalState = (state, action) => {\r\n    let current_country = {...action.payload, population: action.payload.population.toLocaleString() }\r\n    return updateObject(state, { modal: true, currentCountry: current_country });\r\n};\r\n\r\nconst modalToggle = (state) => {\r\n    return updateObject(state, { modal: !state.modal, currentCountry: {} });\r\n};\r\n\r\n\r\nconst tableReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.REQUEST_COUNTRIES_PENDING: return requestCountriesPending(state);\r\n        case actionType.REQUEST_COUNTRIES_SUCCESS: return requestCountriesSuccess(state, action);\r\n        case actionType.REQUEST_COUNTRIES_FAILED: return requestCountriesFail(state, action);\r\n        case actionType.CHANGE_SEARCH_FIELD: return setSearchField(state, action);\r\n        case actionType.SET_MODAL_STATE: return setModalState(state, action);\r\n        case actionType.MODAL_TOGGLE: return modalToggle(state);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default tableReducer;","import * as actionType from '../actions/actionTypes';\r\nimport { updateObject, randBetween } from '../../utility';\r\n\r\nconst initialState = {\r\n    isPending: false,\r\n    countries: [],\r\n    error: null,\r\n    gameStatus: false,\r\n    game: [],\r\n    currentStage: 0,\r\n    randomFlag: ''\r\n}\r\n\r\nconst buildGame = (arr) => {\r\n    const game = [];\r\n    for (let i = 0; i < 10; i++) {\r\n        let stage = randBetween(arr, 4);\r\n        game.push(stage);\r\n    }\r\n    return game;\r\n}\r\n\r\nconst randFlag = (arr, stage) => {\r\n    if (stage < 10) {\r\n        return arr[stage][Math.floor(Math.random() * arr[stage].length)];\r\n    }\r\n}\r\n\r\nconst requestCountriesPending = (state) => {\r\n    return updateObject(state, { isPending: true });\r\n};\r\n\r\nconst requestCountriesSuccess = (state, action) => {\r\n    return updateObject(state, { countries: action.payload, isPending: false });\r\n};\r\n\r\nconst requestCountriesFail = (state, action) => {\r\n    return updateObject(state, { error: action.payload, isPending: false });\r\n};\r\n\r\nconst startGame = (state) => {\r\n    const countriesForGame = [...state.countries];\r\n    const initiateGame = buildGame(countriesForGame);\r\n    return updateObject(state, { gameStatus: true, game: initiateGame, randomFlag: randFlag(initiateGame, state.currentStage) });\r\n}\r\n\r\nconst restartGame = (state) => {\r\n    return updateObject(state, { gameStatus: false, game: [], currentStage: 0 });\r\n}\r\n\r\nconst answerHandler = (state, action) => {\r\n    if (action.payload <= 10) {\r\n        return updateObject(state, { currentStage: action.payload, randomFlag: randFlag(state.game, action.payload) });\r\n    }\r\n}\r\n\r\n const gameReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.REQUEST_COUNTRIES_PENDING: return requestCountriesPending(state);\r\n        case actionType.REQUEST_COUNTRIES_SUCCESS: return requestCountriesSuccess(state, action);\r\n        case actionType.REQUEST_COUNTRIES_FAILED: return requestCountriesFail(state, action);\r\n        case actionType.START_GAME: return startGame(state);\r\n        case actionType.RESTART_GAME: return restartGame(state);\r\n        case actionType.ANSWER_HANDLER: return answerHandler(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default gameReducer;\r\n","import * as actionType from '../actions/actionTypes';\r\nimport { updateObject } from '../../utility';\r\n\r\nconst initialState = {\r\n    isPending: false,\r\n    topThreeCountries: [],\r\n    regions: [],\r\n    countedCountries: [],\r\n    error: null\r\n}\r\n\r\nconst topThreeCalc = (arr) => {\r\n    return arr.sort((a, b) => b.population - a.population).slice(0, 3);\r\n}\r\n\r\nconst regionListExtract = (arr) => {\r\n    const regionList = arr.map(country => country.region).filter(region => region !== \"\");\r\n    const uniqueRegions = Array.from(new Set(regionList)).sort();\r\n    return uniqueRegions;\r\n}\r\n\r\nconst countedCountriesCalc = (arr) => {\r\n    const sortedRegion = arr.sort((a, b) => (a.region > b.region) - (a.region < b.region));\r\n    const countedCountries = sortedRegion.reduce((regionResult, country) => {\r\n        if (!country.region) return regionResult;\r\n\r\n        let regionIndex = regionResult.findIndex((region) => country.region === region.name);\r\n\r\n        if (~regionIndex) {\r\n            regionResult[regionIndex].count++;\r\n        } else {\r\n            regionResult.push({ name: country.region, count: 1 });\r\n\r\n        }\r\n        return regionResult;\r\n    }, []);\r\n\r\n    return countedCountries;\r\n\r\n}\r\n\r\nconst requestCountriesPending = (state) => {\r\n    return updateObject(state, { isPending: true });\r\n};\r\n\r\nconst requestCountriesSuccess = (state, action) => {\r\n\r\n    const topThree = topThreeCalc(action.payload);\r\n    const regionList = regionListExtract(action.payload);\r\n    const countedCountries = countedCountriesCalc(action.payload);\r\n\r\n    return updateObject(state, { topThreeCountries: topThree, regions: regionList, countedCountries: countedCountries, isPending: false });\r\n};\r\n\r\nconst requestCountriesFail = (state, action) => {\r\n    return updateObject(state, { error: action.payload, isPending: false });\r\n};\r\n\r\nconst chartsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.REQUEST_COUNTRIES_FOR_CHARTS_PENDING: return requestCountriesPending(state);\r\n        case actionType.REQUEST_COUNTRIES_FOR_CHARTS_SUCCESS: return requestCountriesSuccess(state, action);\r\n        case actionType.REQUEST_COUNTRIES_FOR_CHARTS_FAILED: return requestCountriesFail(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default chartsReducer;","import { combineReducers } from 'redux';\r\nimport tableReducer from './tableReducer';\r\nimport gameReducer from './gameReducer';\r\nimport chartsReducer from './chartsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    tableReducer,\r\n    gameReducer,\r\n    chartsReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n    const logger = (createLogger());\r\n    middlewares.push(logger);\r\n    // const { whyDidYouUpdate } = require('why-did-you-update');\r\n    // whyDidYouUpdate(React, {\r\n    //     exclude: [\r\n    //         // React Router\r\n    //         /^Route/,\r\n    //         // Switch \r\n    //         /^Switch/\r\n    //     ]\r\n    // });\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nconst app = <Provider store={store}><App /></Provider>;\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\nregisterServiceWorker();"],"sourceRoot":""}