{"version":3,"sources":["components/Game/GameIntro/GameIntro.js","components/Game/DoneGame/DoneGame.js","components/Game/Avatar/Avatar.js","components/Game/RestartButton/RestartButton.js","components/Game/AnswerList/AnswerList.js","components/Game/RandomFlag/RandomFlag.js","containers/FlagGame/QuizGame/QuizGame.js","containers/FlagGame/FlagGame.js","store/actions/actions.js","components/Spinner/Spinner.js"],"names":["gameIntro","_ref","startFlagGame","react_default","a","createElement","className","src","globe","alt","reactstrap_es","onClick","color","size","doneGame","props","score","restart","avatar","context","RestartButton","reset","outline","AnswerList","game","stage","flag","rightAnswerFlagId","wrongAnswerFlagId","click","answerFlag","answersList","map","country","key","alpha3Code","disabled","name","RandomFlag","style","backgroundImage","concat","QuizGame","state","wrongId","rightId","nextStage","countRightAnswer","timer","answerHandler","answer","id","_this","setState","prevState","setTimeout","nextStageHandler","currentStage","wrongAnswer","renderStage","_this$props","randomFlag","restartGameHandler","sm","md","Game_RandomFlag_RandomFlag","Avatar","Game_RestartButton_RestartButton","Game_AnswerList_AnswerList","renderGame","DoneGame_DoneGame","this","_this2","timerID","setInterval","tick","nextProps","nextState","prevProps","clearInterval","Component","connect","gameReducer","dispatch","restartGame","FlagGame","gameStatus","FlagGame_QuizGame_QuizGame","GameIntro","startGameHandler","countries","length","requestCountriesHandler","Spinner","tableReducer","isPending","requestCountries","startGame","__webpack_require__","d","__webpack_exports__","setSearchField","setModalState","modalToggle","requestCountriesForCharts","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_actionTypes__WEBPACK_IMPORTED_MODULE_1__","type","actionType","axios","get","then","payload","data","catch","error","text","obj","num","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","spinner","margin"],"mappings":"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","file":"static/js/3.fa4f6620.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport globe from '../../../assets/globe.svg'\r\n\r\nconst gameIntro = ({ startFlagGame }) => {\r\n    return (\r\n        <div className=\"Flag-Intro\">\r\n            <h1 className=\"Flag-Title\">Flags Quiz Game</h1>\r\n            <img src={globe} className=\"Flag-logo\" alt=\"globe\" />\r\n            <Button onClick={startFlagGame} color=\"secondary\" size=\"lg\">Start Game</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default gameIntro;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './DoneGame.css';\r\n\r\n\r\nconst doneGame = (props) => {\r\n    return (\r\n        <div className=\"Done\">\r\n            <h1>Finish!</h1>\r\n            <h3>You answered correctly on {props.score} {props.score === 1 ? 'question' : 'questions'}</h3>\r\n            <hr />\r\n            <Button onClick={props.restart} color=\"secondary\" size=\"lg\">Back</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default doneGame;","import React from 'react';\r\n\r\nconst avatar = ({ context, className }) => {\r\n    return (\r\n        <div className={className}><span>{context}</span></div>\r\n    )\r\n}\r\n\r\nexport default avatar;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst RestartButton = ({ reset }) => {\r\n    return (\r\n        <div className=\"Restart-Button\">\r\n            <Button onClick={reset} color=\"secondary\" outline>Restart</Button>\r\n        </div>);\r\n}\r\n\r\nexport default RestartButton;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst AnswerList = ({ game, stage, flag, rightAnswerFlagId, wrongAnswerFlagId, click, answerFlag }) => {\r\n    const answersList = game[stage].map(country => {\r\n        return <li key={country.alpha3Code}>\r\n            <Button\r\n                disabled={answerFlag}\r\n                className=\"Answer-Button\"\r\n                onClick={() => click(country.name, flag.name, country.alpha3Code)}\r\n                color=\"secondary\">\r\n                {country.name}\r\n            </Button>\r\n            {wrongAnswerFlagId === country.alpha3Code ? <i className=\"far fa-times-circle wrong-ans\"></i> : null}\r\n            {rightAnswerFlagId === country.alpha3Code ? <i className=\"far fa-check-circle right-ans\"></i> : null}\r\n        </li>;\r\n    });\r\n\r\n    return (\r\n        <ul>\r\n            {answersList}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default AnswerList;","import React from 'react';\r\n\r\nconst RandomFlag = ({ flag }) => {\r\n    return (\r\n        <div className=\"Flag-Img\" style={{ backgroundImage: `url(${flag})` }}></div>\r\n    );\r\n}\r\n\r\nexport default RandomFlag;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { restartGame, answerHandler } from '../../../store/actions/actions';\r\nimport { Row, Col } from 'reactstrap';\r\nimport './QuizGame.css';\r\nimport DoneGame from '../../../components/Game/DoneGame/DoneGame';\r\nimport Avatar from '../../../components/Game/Avatar/Avatar';\r\nimport RestartButton from '../../../components/Game/RestartButton/RestartButton';\r\nimport AnswerList from '../../../components/Game/AnswerList/AnswerList';\r\nimport RandomFlag from '../../../components/Game/RandomFlag/RandomFlag';\r\n\r\nclass QuizGame extends Component {\r\n\r\n    state = {\r\n        wrongId: '',\r\n        rightId: '',\r\n        nextStage: false,\r\n        answerFlag: false,\r\n        countRightAnswer: 0,\r\n        timer: 7\r\n    }\r\n\r\n\r\n    tick() {\r\n        this.setState((prevState) => {\r\n            return {\r\n                timer: prevState.timer - 1\r\n            }\r\n        });\r\n    }\r\n\r\n    nextStageHandler(stage) {\r\n        this.props.answerHandler(stage);\r\n        this.setState((prevState, props) => {\r\n            return {\r\n                answerFlag: false,\r\n                timer: 7\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1200\r\n        );\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextState.timer >= 0;\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (!this.state.timer) {\r\n            this.nextStageHandler(this.props.currentStage);\r\n        }\r\n\r\n        if (prevProps.currentStage === 10) {\r\n            // Clear the timer after the game.\r\n            clearInterval(this.timerID);\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n\r\n    answerHandler = (answer, flag, id) => {\r\n        if (answer === flag) {\r\n            this.setState((prevState, props) => {\r\n                return {\r\n                    countRightAnswer: prevState.countRightAnswer + 1,\r\n                    rightId: id,\r\n                    wrongId: '',\r\n                    answerFlag: true,\r\n                    timer: '0'\r\n                }\r\n            });\r\n            setTimeout(() => this.nextStageHandler(this.props.currentStage), 1000);\r\n        } else {\r\n            this.setState({ wrongAnswer: true, wrongId: id, rightId: '', answerFlag: true, timer: '0' });\r\n            setTimeout(() => this.nextStageHandler(this.props.currentStage), 1000);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderStage = () => {\r\n        const { game, currentStage, randomFlag, restartGameHandler } = this.props;\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\" md=\"6\" className=\"Flag-Col\">\r\n                    <RandomFlag flag={randomFlag.flag} />\r\n                </Col>\r\n                <Col sm=\"12\" md=\"6\" className=\"Answer-Col\">\r\n                    <Avatar className=\"Timer-Avatar\" context={this.state.timer} />\r\n                    <Avatar className=\"Stage-Avatar\" context={currentStage + 1} />\r\n                    <RestartButton reset={restartGameHandler} />\r\n                    <AnswerList\r\n                        game={game}\r\n                        stage={currentStage}\r\n                        flag={randomFlag}\r\n                        click={this.answerHandler}\r\n                        wrongAnswerFlagId={this.state.wrongId}\r\n                        rightAnswerFlagId={this.state.rightId}\r\n                        answerFlag={this.state.answerFlag} />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    renderGame = () => {\r\n        if (this.props.currentStage !== 10) {\r\n            return this.renderStage();\r\n        } else {\r\n            return <DoneGame score={this.state.countRightAnswer} restart={this.props.restartGameHandler} />\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Quiz-Game\">\r\n                {this.renderGame()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        game: state.gameReducer.game,\r\n        currentStage: state.gameReducer.currentStage,\r\n        randomFlag: state.gameReducer.randomFlag\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        restartGameHandler: () => dispatch(restartGame()),\r\n        answerHandler: (currentStage) => dispatch(answerHandler(currentStage))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizGame);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { requestCountries, startGame, restartGame } from '../../store/actions/actions';\r\nimport GameIntro from '../../components/Game/GameIntro/GameIntro';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport './FlagGame.css';\r\nimport QuizGame from './QuizGame/QuizGame';\r\n\r\nclass FlagGame extends Component {\r\n\r\n    componentDidMount() {\r\n        if (!this.props.countries.length) {\r\n            this.props.requestCountriesHandler();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.restartGameHandler();\r\n    }\r\n\r\n    renderGame = () => !this.props.gameStatus ? <GameIntro startFlagGame={this.props.startGameHandler} /> : <QuizGame />;\r\n\r\n    render() {\r\n        return this.props.countries.length ? this.renderGame() : <Spinner />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        countries: state.tableReducer.countries,\r\n        isPending: state.tableReducer.isPending,\r\n        gameStatus: state.gameReducer.gameStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        requestCountriesHandler: () => dispatch(requestCountries()),\r\n        startGameHandler: () => dispatch(startGame()),\r\n        restartGameHandler: () => dispatch(restartGame())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FlagGame);","import axios from 'axios';\r\nimport * as actionType from './actionTypes';\r\n\r\nexport const requestCountries = () => (dispatch) => {\r\n    const url = \"https://restcountries.eu/rest/v2/all?fields=name;flag;alpha3Code;capital;region;population\";\r\n    dispatch({ type: actionType.REQUEST_COUNTRIES_PENDING });\r\n    axios.get(url)\r\n        .then(countries => dispatch({ type: actionType.REQUEST_COUNTRIES_SUCCESS, payload: countries.data }))\r\n        .catch(error => dispatch({ type: actionType.REQUEST_COUNTRIES_FAILED, payload: error }));\r\n};\r\n\r\n//---------------------------------------------------------\r\n\r\n// Country Table Actions.\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: actionType.CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n});\r\n\r\nexport const setModalState = (obj) => ({\r\n    type: actionType.SET_MODAL_STATE,\r\n    payload: obj\r\n});\r\n\r\nexport const modalToggle = () => ({\r\n    type: actionType.MODAL_TOGGLE\r\n});\r\n\r\n//---------------------------------------------------------\r\n\r\n// Flag Game Actions.\r\n\r\nexport const startGame = () => ({\r\n    type: actionType.START_GAME\r\n});\r\n\r\nexport const restartGame = () => ({\r\n    type: actionType.RESTART_GAME\r\n});\r\n\r\nexport const answerHandler = (num) => ({\r\n    type: actionType.ANSWER_HANDLER,\r\n    payload: num + 1\r\n});\r\n\r\n//---------------------------------------------------------\r\n\r\n// Charts Actions\r\n\r\nexport const requestCountriesForCharts = () => (dispatch) => {\r\n    const url = \"https://restcountries.eu/rest/v2/all?fields=name;region;population\";\r\n    dispatch({ type: actionType.REQUEST_COUNTRIES_FOR_CHARTS_PENDING });\r\n    axios.get(url)\r\n        .then(countries => dispatch({ type: actionType.REQUEST_COUNTRIES_FOR_CHARTS_SUCCESS, payload: countries.data }))\r\n        .catch(error => dispatch({ type: actionType.REQUEST_COUNTRIES_FOR_CHARTS_FAILED, payload: error }));\r\n};","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst spinner = () => (\r\n    <div style={{ margin: 'auto' }}>\r\n        <div className=\"Loader\"></div>\r\n    </div>\r\n);\r\n\r\nexport default spinner;"],"sourceRoot":""}